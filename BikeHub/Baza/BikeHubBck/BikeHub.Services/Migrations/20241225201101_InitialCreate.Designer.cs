// <auto-generated />
using System;
using BikeHub.Services.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BikeHub.Services.Migrations
{
    [DbContext(typeof(BikeHubDbContext))]
    [Migration("20241225201101_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BikeHub.Services.Database.Adresa", b =>
                {
                    b.Property<int>("AdresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdresaId"));

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("PostanskiBroj")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Kreiran')");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("AdresaId")
                        .HasName("PK__Adresa__03B983FCA509345D");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Adresa", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.Bicikl", b =>
                {
                    b.Property<int>("BiciklId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BiciklId"));

                    b.Property<int?>("BrojBrzina")
                        .HasColumnType("int");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VelicinaRama")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VelicinaTocka")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("BiciklId")
                        .HasName("PK__Bicikl__6C2F5A7C6852ACEF");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Bicikl", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.Dijelovi", b =>
                {
                    b.Property<int>("DijeloviId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DijeloviId"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Aktivan')");

                    b.HasKey("DijeloviId")
                        .HasName("PK__Dijelovi__DD1433FDF0768488");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Dijelovi", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.Kategorija", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategorijaId"));

                    b.Property<bool?>("IsBikeKategorija")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KategorijaId")
                        .HasName("PK__Kategori__6C3B8FEEE2B9895F");

                    b.ToTable("Kategorija", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LozinkaHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LozinkaSalt")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Aktivan')");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnik__80B06D4166618F56");

                    b.HasIndex(new[] { "Username" }, "UQ__Korisnik__536C85E4B9F6B45A")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Korisnik__A9D10534FE61FF99")
                        .IsUnique();

                    b.ToTable("Korisnik", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.KorisnikInfo", b =>
                {
                    b.Property<int>("KorisnikInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikInfoId"));

                    b.Property<int?>("BrojNarudbi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("BrojServisa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ImePrezime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Kreiran')");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("KorisnikInfoId")
                        .HasName("PK__Korisnik__635A1589DE413B07");

                    b.HasIndex("KorisnikId");

                    b.ToTable("KorisnikInfo", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.Narudzba", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NarudzbaId"));

                    b.Property<DateTime>("DatumNarudzbe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("ProdavaocId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("UkupnaCijena")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("NarudzbaId")
                        .HasName("PK__Narudzba__FBEC13776B24CC09");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Narudzba", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.NarudzbaBicikli", b =>
                {
                    b.Property<int>("NarudzbaBicikliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NarudzbaBicikliId"));

                    b.Property<int>("BiciklId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("NarudzbaId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Kreiran')");

                    b.HasKey("NarudzbaBicikliId")
                        .HasName("PK__Narudzba__55EEB7C94E4BAE50");

                    b.HasIndex("BiciklId");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("NarudzbaBicikli", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.NarudzbaDijelovi", b =>
                {
                    b.Property<int>("NarudzbaDijeloviId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NarudzbaDijeloviId"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("DijeloviId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("NarudzbaId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Kreiran')");

                    b.HasKey("NarudzbaDijeloviId")
                        .HasName("PK__Narudzba__F880F9DB54CE26CA");

                    b.HasIndex("DijeloviId");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("NarudzbaDijelovi", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.PromocijaBicikli", b =>
                {
                    b.Property<int>("PromocijaBicikliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromocijaBicikliId"));

                    b.Property<int>("BiciklId")
                        .HasColumnType("int");

                    b.Property<decimal>("CijenaPromocije")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("date");

                    b.Property<DateTime>("DatumZavrsetka")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Aktivan')");

                    b.HasKey("PromocijaBicikliId")
                        .HasName("PK__Promocij__BDD5375EB6ECA804");

                    b.HasIndex("BiciklId");

                    b.ToTable("PromocijaBicikli", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.PromocijaDijelovi", b =>
                {
                    b.Property<int>("PromocijaDijeloviId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromocijaDijeloviId"));

                    b.Property<decimal>("CijenaPromocije")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("date");

                    b.Property<DateTime>("DatumZavrsetka")
                        .HasColumnType("date");

                    b.Property<int>("DijeloviId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Aktivan')");

                    b.HasKey("PromocijaDijeloviId")
                        .HasName("PK__Promocij__3D3D4B47860B5207");

                    b.HasIndex("DijeloviId");

                    b.ToTable("PromocijaDijelovi", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.RecommendedKategorija", b =>
                {
                    b.Property<int>("RecommendedKategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecommendedKategorijaId"));

                    b.Property<int>("BicikliId")
                        .HasColumnType("int");

                    b.Property<int?>("BrojPreporuka")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DatumKreiranja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DijeloviId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Aktivan')");

                    b.HasKey("RecommendedKategorijaId")
                        .HasName("PK__Recommen__EC73A5F08D44C318");

                    b.HasIndex("BicikliId");

                    b.HasIndex("DijeloviId");

                    b.ToTable("RecommendedKategorija", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.RezervacijaServisa", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervacijaId"));

                    b.Property<DateTime>("DatumKreiranja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Ocjena")
                        .HasColumnType("decimal(3, 2)");

                    b.Property<int>("ServiserId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Aktivan')");

                    b.HasKey("RezervacijaId")
                        .HasName("PK__Rezervac__CABA44DD97C21C44");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ServiserId");

                    b.ToTable("RezervacijaServisa", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.Serviser", b =>
                {
                    b.Property<int>("ServiserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiserId"));

                    b.Property<int?>("BrojServisa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Cijena")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Aktivan')");

                    b.Property<decimal?>("UkupnaOcjena")
                        .HasColumnType("decimal(3, 1)");

                    b.HasKey("ServiserId")
                        .HasName("PK__Serviser__62E9F597520FA9DA");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Serviser", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.SlikeBicikli", b =>
                {
                    b.Property<int>("SlikeBicikliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlikeBicikliId"));

                    b.Property<int>("BiciklId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Kreiran')");

                    b.HasKey("SlikeBicikliId")
                        .HasName("PK__SlikeBic__7176487F559E61D2");

                    b.HasIndex("BiciklId");

                    b.ToTable("SlikeBicikli", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.SlikeDijelovi", b =>
                {
                    b.Property<int>("SlikeDijeloviId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlikeDijeloviId"));

                    b.Property<int>("DijeloviId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Kreiran')");

                    b.HasKey("SlikeDijeloviId")
                        .HasName("PK__SlikeDij__70EC898A0F0F6418");

                    b.HasIndex("DijeloviId");

                    b.ToTable("SlikeDijelovi", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.SpaseniBicikli", b =>
                {
                    b.Property<int>("SpaseniBicikliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpaseniBicikliId"));

                    b.Property<int>("BiciklId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumSpasavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Kreiran')");

                    b.HasKey("SpaseniBicikliId")
                        .HasName("PK__SpaseniB__054423BB72AAF9DF");

                    b.HasIndex("BiciklId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("SpaseniBicikli", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.SpaseniDijelovi", b =>
                {
                    b.Property<int>("SpaseniDijeloviId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpaseniDijeloviId"));

                    b.Property<DateTime>("DatumSpasavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DijeloviId")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Kreiran')");

                    b.HasKey("SpaseniDijeloviId")
                        .HasName("PK__SpaseniD__C3C4E858078D8670");

                    b.HasIndex("DijeloviId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("SpaseniDijelovi", (string)null);
                });

            modelBuilder.Entity("BikeHub.Services.Database.Adresa", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Adresas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Adresa__Korisnik__5DCAEF64");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("BikeHub.Services.Database.Bicikl", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Kategorija", "Kategorija")
                        .WithMany("Bicikls")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_Bicikl_Kategorija");

                    b.HasOne("BikeHub.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Bicikls")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Bicikl_Korisnik");

                    b.Navigation("Kategorija");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("BikeHub.Services.Database.Dijelovi", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Kategorija", "Kategorija")
                        .WithMany("Dijelovis")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_Dijelovi_Kategorija");

                    b.HasOne("BikeHub.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Dijelovis")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Dijelovi_Korisnik");

                    b.Navigation("Kategorija");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("BikeHub.Services.Database.KorisnikInfo", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Korisnik", "Korisnik")
                        .WithMany("KorisnikInfos")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__KorisnikI__Koris__5EBF139D");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("BikeHub.Services.Database.Narudzba", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Narudzbas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Narudzba__Korisn__5FB337D6");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("BikeHub.Services.Database.NarudzbaBicikli", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Bicikl", "Bicikl")
                        .WithMany("NarudzbaBiciklis")
                        .HasForeignKey("BiciklId")
                        .IsRequired()
                        .HasConstraintName("FK__NarudzbaB__Bicik__619B8048");

                    b.HasOne("BikeHub.Services.Database.Narudzba", "Narudzba")
                        .WithMany("NarudzbaBiciklis")
                        .HasForeignKey("NarudzbaId")
                        .IsRequired()
                        .HasConstraintName("FK__NarudzbaB__Narud__60A75C0F");

                    b.Navigation("Bicikl");

                    b.Navigation("Narudzba");
                });

            modelBuilder.Entity("BikeHub.Services.Database.NarudzbaDijelovi", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Dijelovi", "Dijelovi")
                        .WithMany("NarudzbaDijelovis")
                        .HasForeignKey("DijeloviId")
                        .IsRequired()
                        .HasConstraintName("FK__NarudzbaD__Dijel__6383C8BA");

                    b.HasOne("BikeHub.Services.Database.Narudzba", "Narudzba")
                        .WithMany("NarudzbaDijelovis")
                        .HasForeignKey("NarudzbaId")
                        .IsRequired()
                        .HasConstraintName("FK__NarudzbaD__Narud__628FA481");

                    b.Navigation("Dijelovi");

                    b.Navigation("Narudzba");
                });

            modelBuilder.Entity("BikeHub.Services.Database.PromocijaBicikli", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Bicikl", "Bicikl")
                        .WithMany("PromocijaBiciklis")
                        .HasForeignKey("BiciklId")
                        .IsRequired()
                        .HasConstraintName("FK__Promocija__Bicik__6477ECF3");

                    b.Navigation("Bicikl");
                });

            modelBuilder.Entity("BikeHub.Services.Database.PromocijaDijelovi", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Dijelovi", "Dijelovi")
                        .WithMany("PromocijaDijelovis")
                        .HasForeignKey("DijeloviId")
                        .IsRequired()
                        .HasConstraintName("FK__Promocija__Dijel__656C112C");

                    b.Navigation("Dijelovi");
                });

            modelBuilder.Entity("BikeHub.Services.Database.RecommendedKategorija", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Bicikl", "Bicikli")
                        .WithMany("RecommendedKategorijas")
                        .HasForeignKey("BicikliId")
                        .IsRequired()
                        .HasConstraintName("FK__Recommend__Bicik__7E37BEF6");

                    b.HasOne("BikeHub.Services.Database.Dijelovi", "Dijelovi")
                        .WithMany("RecommendedKategorijas")
                        .HasForeignKey("DijeloviId")
                        .IsRequired()
                        .HasConstraintName("FK__Recommend__Dijel__7D439ABD");

                    b.Navigation("Bicikli");

                    b.Navigation("Dijelovi");
                });

            modelBuilder.Entity("BikeHub.Services.Database.RezervacijaServisa", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Korisnik", "Korisnik")
                        .WithMany("RezervacijaServisas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Rezervaci__Koris__66603565");

                    b.HasOne("BikeHub.Services.Database.Serviser", "Serviser")
                        .WithMany("RezervacijaServisas")
                        .HasForeignKey("ServiserId")
                        .IsRequired()
                        .HasConstraintName("FK__Rezervaci__Servi__6754599E");

                    b.Navigation("Korisnik");

                    b.Navigation("Serviser");
                });

            modelBuilder.Entity("BikeHub.Services.Database.Serviser", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Servisers")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Serviser__Korisn__68487DD7");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("BikeHub.Services.Database.SlikeBicikli", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Bicikl", "Bicikl")
                        .WithMany("SlikeBiciklis")
                        .HasForeignKey("BiciklId")
                        .IsRequired()
                        .HasConstraintName("FK__SlikeBici__Bicik__693CA210");

                    b.Navigation("Bicikl");
                });

            modelBuilder.Entity("BikeHub.Services.Database.SlikeDijelovi", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Dijelovi", "Dijelovi")
                        .WithMany("SlikeDijelovis")
                        .HasForeignKey("DijeloviId")
                        .IsRequired()
                        .HasConstraintName("FK__SlikeDije__Dijel__6A30C649");

                    b.Navigation("Dijelovi");
                });

            modelBuilder.Entity("BikeHub.Services.Database.SpaseniBicikli", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Bicikl", "Bicikl")
                        .WithMany("SpaseniBiciklis")
                        .HasForeignKey("BiciklId")
                        .IsRequired()
                        .HasConstraintName("FK__SpaseniBi__Bicik__6B24EA82");

                    b.HasOne("BikeHub.Services.Database.Korisnik", "Korisnik")
                        .WithMany("SpaseniBiciklis")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_SpaseniBicikli_Korisnik");

                    b.Navigation("Bicikl");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("BikeHub.Services.Database.SpaseniDijelovi", b =>
                {
                    b.HasOne("BikeHub.Services.Database.Dijelovi", "Dijelovi")
                        .WithMany("SpaseniDijelovis")
                        .HasForeignKey("DijeloviId")
                        .IsRequired()
                        .HasConstraintName("FK__SpaseniDi__Dijel__6C190EBB");

                    b.HasOne("BikeHub.Services.Database.Korisnik", "Korisnik")
                        .WithMany("SpaseniDijelovis")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_SpaseniDijelovi_Korisnik");

                    b.Navigation("Dijelovi");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("BikeHub.Services.Database.Bicikl", b =>
                {
                    b.Navigation("NarudzbaBiciklis");

                    b.Navigation("PromocijaBiciklis");

                    b.Navigation("RecommendedKategorijas");

                    b.Navigation("SlikeBiciklis");

                    b.Navigation("SpaseniBiciklis");
                });

            modelBuilder.Entity("BikeHub.Services.Database.Dijelovi", b =>
                {
                    b.Navigation("NarudzbaDijelovis");

                    b.Navigation("PromocijaDijelovis");

                    b.Navigation("RecommendedKategorijas");

                    b.Navigation("SlikeDijelovis");

                    b.Navigation("SpaseniDijelovis");
                });

            modelBuilder.Entity("BikeHub.Services.Database.Kategorija", b =>
                {
                    b.Navigation("Bicikls");

                    b.Navigation("Dijelovis");
                });

            modelBuilder.Entity("BikeHub.Services.Database.Korisnik", b =>
                {
                    b.Navigation("Adresas");

                    b.Navigation("Bicikls");

                    b.Navigation("Dijelovis");

                    b.Navigation("KorisnikInfos");

                    b.Navigation("Narudzbas");

                    b.Navigation("RezervacijaServisas");

                    b.Navigation("Servisers");

                    b.Navigation("SpaseniBiciklis");

                    b.Navigation("SpaseniDijelovis");
                });

            modelBuilder.Entity("BikeHub.Services.Database.Narudzba", b =>
                {
                    b.Navigation("NarudzbaBiciklis");

                    b.Navigation("NarudzbaDijelovis");
                });

            modelBuilder.Entity("BikeHub.Services.Database.Serviser", b =>
                {
                    b.Navigation("RezervacijaServisas");
                });
#pragma warning restore 612, 618
        }
    }
}
